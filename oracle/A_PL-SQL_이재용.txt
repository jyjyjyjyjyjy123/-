--개인정보
CREATE OR REPLACE PROCEDURE procstudentCourseState(
    studentNum NUMBER
)IS
BEGIN
	FOR op IN (SELECT 
		            cn2.coursename AS aaa,
		            s.studentname AS bbb,
		            round(((alls.ats + alls.ws + alls.ps)/3), 2) AS ccc,
		            sq.te AS ddd,
		            TO_CHAR(c2.coursestartdate, 'yyyy-mm-dd') || ' ~ ' || TO_CHAR(c2.courseenddate, 'yyyy-mm-dd') AS eee,
		            cs3.coursestatus AS fff
		        FROM tblstudent s
		        INNER JOIN tblcoursereg cr ON s.student_seq = cr.student_seq
		        INNER JOIN tblcompletestate cs ON cr.completestate_seq = cs.completestate_seq
		        INNER JOIN tblcourse c2 ON c2.course_seq = cr.course_seq
		        INNER JOIN tblcoursestatus cs3 ON c2.coursestatus_seq = cs3.coursestatus_seq
		        INNER JOIN tblcoursename cn2 ON cn2.coursename_seq = c2.coursename_seq
		        INNER JOIN (SELECT 
				                cs2.course_seq AS co,
				                t2.teachername AS te
				            FROM tblcoursesubject cs2
				            INNER JOIN tblsubjectavailability sa2 ON cs2.subjectavailability_seq = sa2.subjectavailability_seq
				            INNER JOIN tblteacher t2 ON sa2.teacher_seq = t2.teacher_seq
				            GROUP BY cs2.course_seq, t2.teachername
				            ORDER BY cs2.course_seq
				        ) sq ON sq.co = c2.course_seq
		        INNER JOIN (SELECT
		        				alls.student_seq,
		        				AVG(attendscore) AS ats,
		        				AVG(wscore) AS ws,
		        				AVG(pscore) AS ps
				            FROM tblallscore alls
				            INNER JOIN tblstudent s ON s.student_seq = alls.student_seq
				            GROUP BY alls.student_seq) alls ON alls.student_seq = s.student_seq
		        WHERE s.student_seq = studentNum
		        ORDER BY s.student_seq
    )LOOP
        DBMS_OUTPUT.PUT_LINE('과정명: ' || op.aaa);
        DBMS_OUTPUT.PUT_LINE('교육생 이름: ' || op.bbb);
        DBMS_OUTPUT.PUT_LINE('평균 점수: ' || op.ccc);
        DBMS_OUTPUT.PUT_LINE('강사명: ' || op.ddd);
        DBMS_OUTPUT.PUT_LINE('과정 기간: ' || op.eee);
        DBMS_OUTPUT.PUT_LINE('과정 상태: ' || op.fff);
    END LOOP;
END procstudentCourseState;

DECLARE
BEGIN
    procstudentCourseState(204);
END;

--자격증 검색
CREATE OR REPLACE PROCEDURE procFindCertifyStudent(
    studentNum NUMBER
) 
IS
BEGIN
    FOR op IN (SELECT 
		            cn2.coursename AS aaa,
		            s.studentname AS bbb,
		            cn.certifyname AS ccc
		        FROM tblstudent s
		        INNER JOIN tblcertify c ON s.student_seq = c.student_seq
		        INNER JOIN tblcertifyname cn ON c.ceritifyname_seq = cn.certifyname_seq
		        INNER JOIN tblcoursereg cr ON s.student_seq = cr.student_seq
		        INNER JOIN tblcourse c2 ON c2.course_seq = cr.course_seq
		        INNER JOIN tblcoursename cn2 ON cn2.coursename_seq = c2.coursename_seq
		        WHERE s.student_seq = studentNum
		        ORDER BY s.student_seq) 
    LOOP
        DBMS_OUTPUT.PUT_LINE('과정명: ' || op.aaa);
        DBMS_OUTPUT.PUT_LINE('교육생 이름: ' || op.bbb);
        DBMS_OUTPUT.PUT_LINE('자격증명: ' || op.ccc);
        DBMS_OUTPUT.PUT_LINE('　');
    END LOOP;
END procFindCertifyStudent;

DECLARE
BEGIN
    procFindCertifyStudent(204);
END;

--경력사항
CREATE OR REPLACE PROCEDURE procStudentWorkExperience(
    studentNum NUMBER
) 
IS
BEGIN
    FOR op IN (SELECT 
		            cn2.coursename AS aaa,
		            s.studentname AS bbb,
		            we.workspace AS ccc,
		            TO_CHAR(we.workstartdate, 'yyyy-mm-dd') || ' ~ ' || TO_CHAR(we.worrenddate, 'yyyy-mm-dd') AS ddd,
		            we.worktask AS eee
		        FROM tblstudent s
		        INNER JOIN tblWorkExperienceRel wer ON wer.student_seq = s.student_seq
		        INNER JOIN tblWorkExperience we ON we.workexperience_seq = wer.workexperience_seq
		        INNER JOIN tblcoursereg cr ON s.student_seq = cr.student_seq
		        INNER JOIN tblcourse c2 ON c2.course_seq = cr.course_seq
		        INNER JOIN tblcoursename cn2 ON cn2.coursename_seq = c2.coursename_seq
		        WHERE s.student_seq = studentNum
		        ORDER BY s.student_seq
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('과정명: ' || op.aaa);
        DBMS_OUTPUT.PUT_LINE('교육생 이름: ' || op.bbb);
        DBMS_OUTPUT.PUT_LINE('회사명: ' || op.ccc);
        DBMS_OUTPUT.PUT_LINE('근무 기간: ' || op.ddd);
        DBMS_OUTPUT.PUT_LINE('직위: ' || op.eee);
        DBMS_OUTPUT.PUT_LINE('　');
    END LOOP;
END procStudentWorkExperience;

DECLARE
BEGIN
    procStudentWorkExperience(204);
END;

-- 희망 근무 조건
CREATE OR REPLACE PROCEDURE procStudentHopeDuty(
    studentNum NUMBER
) 
IS
BEGIN
    FOR op IN (SELECT 
		            cn2.coursename AS aaa,
		            s.studentname AS bbb,
		            hd.hopedutyfield AS ccc,
		            ha.hopearea AS ddd,
		            hd.hopesalary AS eee
		        FROM tblstudent s
		        INNER JOIN tblcoursereg cr ON s.student_seq = cr.student_seq
		        INNER JOIN tblcourse c2 ON c2.course_seq = cr.course_seq
		        INNER JOIN tblcoursename cn2 ON cn2.coursename_seq = c2.coursename_seq
		        INNER JOIN tblHopeDuty hd ON hd.student_seq = s.student_seq
		        INNER JOIN tblHopeAreaRel har ON har.hopeduty_seq = hd.hopeduty_seq
		        INNER JOIN tblhopearea ha ON ha.hopearea_seq = har.hopearea_seq
		        WHERE s.student_seq = studentNum
		        ORDER BY s.student_seq
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('과정명: ' || op.aaa);
        DBMS_OUTPUT.PUT_LINE('교육생 이름: ' || op.bbb);
        DBMS_OUTPUT.PUT_LINE('취업 희망분야: ' || op.ccc);
        DBMS_OUTPUT.PUT_LINE('희망지역: ' || op.ddd);
        DBMS_OUTPUT.PUT_LINE('희망급여: ' || op.eee);
    END LOOP;
END procStudentHopeDuty;

DECLARE
BEGIN
    procStudentHopeDuty(204);
END;

-- 취업 현황
CREATE OR REPLACE PROCEDURE procStudentEmployment(
    studentNum NUMBER
) IS
BEGIN
    FOR op IN (SELECT 
						cn2.coursename AS aaa,
						s.studentname AS bbb,
						e.companyname AS ccc,
						e.insurance AS ddd,
						to_char(e.hiredate, 'yyyy-mm-dd') AS eee,
						cs.completestate AS fff,
						to_char(cr.completedate, 'yyyy-mm-dd') AS ggg
					FROM tblstudent s
						INNER JOIN tblcoursereg cr
							ON s.student_seq = cr.student_seq
						INNER JOIN tblcompletestate cs
							ON cs.completestate_seq = cr.completestate_seq	
						INNER JOIN tblcourse c2
							ON c2.course_seq = cr.course_seq
						INNER JOIN tblcoursename cn2
							ON cn2.coursename_seq = c2.coursename_seq
						INNER JOIN tblemployment e
							ON e.student_seq = s.student_seq
						WHERE s.student_seq = studentNum
						ORDER BY s.student_seq
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('과정명: ' || op.aaa);
        DBMS_OUTPUT.PUT_LINE('교육생 이름: ' || op.bbb);
        DBMS_OUTPUT.PUT_LINE('기업명: ' || op.ccc);
        DBMS_OUTPUT.PUT_LINE('고용보험: ' || op.ddd);
        DBMS_OUTPUT.PUT_LINE('취업일: ' || op.eee);
        DBMS_OUTPUT.PUT_LINE('수료상태: ' || op.fff);
        DBMS_OUTPUT.PUT_LINE('수료일: ' || op.ggg);
        DBMS_OUTPUT.PUT_LINE('　');       
    END LOOP;
END procStudentEmployment;

DECLARE
BEGIN
    procStudentEmployment(204);
END;

view--경력사항 수정
UPDATE tblworkexperience we SET we.workspace = '쌍용교육센터' 	WHERE we.workexperience_seq = 127;

view--자격증 수정
UPDATE tblcertify SET ceritifyname_seq = 1 WHERE student_seq = 499;

view--희망근무 조건 수정
UPDATE tblhopeduty SET hopedutyfield = '웹디자이너' WHERE student_seq = 502;

view--취업관리사항
UPDATE tblemployment SET companyname = '쌍용교육센터' WHERE employment_seq = 288;


-- D-5
view-- 컴퓨터 이상 보고(등록)
INSERT INTO tblcommanage (commanage_seq,comendrepair,comstate_seq,commanagedate,comnum,room_seq)
	values((SELECT max(commanage_seq)+1 FROM tblcommanage),NULL,1,sysdate,34,2);

-- 컴퓨터 이상 목록 조회
CREATE OR REPLACE PROCEDURE procStudentComManage(
    studentNum NUMBER,
    studentComNum NUMBER
) IS
BEGIN
    FOR op IN ( SELECT 
		            c.commanage_seq AS aaa,
		            cs.comstate AS bbb,
		            TO_CHAR(c.commanagedate, 'yyyy-mm-dd') AS ccc,
		            CASE 
		                WHEN c.comendrepair IS NOT NULL THEN '수리 완료'
		                WHEN c.comendrepair IS NULL THEN '수리 진행중'
		            END AS ddd,
		            c.room_seq AS eee,
		            c.comnum AS fff,
		            cn.coursename AS ggg,
		            cs2.coursestatus AS hhh
		        FROM tblcommanage c
		        INNER JOIN tblcomstate cs ON c.comstate_seq = cs.comstate_seq
		        INNER JOIN tblcourseroom cr ON cr.room_seq = c.room_seq
		        INNER JOIN tblcourse course ON course.room_seq = cr.room_seq
		        INNER JOIN tblcoursename cn ON cn.coursename_seq = course.coursename_seq
		        INNER JOIN tblcoursestatus cs2 ON cs2.coursestatus_seq = course.coursestatus_seq
		        INNER JOIN tblcoursereg cr2 ON cr2.course_seq = course.course_seq
		        INNER JOIN tblstudent st ON st.student_seq = cr2.student_seq
		        WHERE st.student_seq = studentNum AND c.comnum = studentComNum
		        ORDER BY c.commanage_seq
    ) 
    LOOP
        DBMS_OUTPUT.PUT_LINE('관리 번호: ' || op.aaa);
        DBMS_OUTPUT.PUT_LINE('이상증세: ' || op.bbb);
        DBMS_OUTPUT.PUT_LINE('수리신청 시간: ' || op.ccc);
        DBMS_OUTPUT.PUT_LINE('수리완료여부: ' || op.ddd);
        DBMS_OUTPUT.PUT_LINE('강의실 번호: ' || op.eee);
        DBMS_OUTPUT.PUT_LINE('컴퓨터 번호: ' || op.fff);
        DBMS_OUTPUT.PUT_LINE('과정명: ' || op.ggg);
        DBMS_OUTPUT.PUT_LINE('진행상태: ' || op.hhh);
    END LOOP;
END procStudentComManage;

DECLARE
BEGIN
    procStudentComManage(204, 1);
END;

-- 자신이 진행중인 설문조사 목록 조회
CREATE OR REPLACE PROCEDURE procStudentSurvey(
    studentNum NUMBER
) IS
BEGIN
    FOR op IN (
        SELECT 
            s.survey_seq AS aaa,
            s2.subject AS bbb,
            TO_CHAR(cs.coursesubjectstartdate, 'yyyy-mm-dd') || ' ~ ' || TO_CHAR(cs.cousesubjectenddate, 'yyyy-mm-dd') AS ccc,
            sf.surveyfile || '.docs' AS ddd,
            CASE 
                WHEN s.surveydate IS NOT NULL THEN '완료'
                WHEN s.surveydate IS NULL THEN '미완료'
            END AS eee,
            s.surveydate AS fff
        FROM tblSurvey s
        INNER JOIN tblsurveyfile sf ON s.surveyfile_seq = sf.surveyfile_seq
        INNER JOIN tblstudent st ON st.student_seq = s.student_seq
        INNER JOIN tblcoursesubject cs ON cs.coursesubject_seq = s.coursesubject_seq
        INNER JOIN tblsubjectavailability sa ON sa.subjectavailability_seq = cs.subjectavailability_seq
        INNER JOIN tblsubject s2 ON s2.subject_seq = sa.subject_seq
        WHERE st.student_seq = studentNum
        ORDER BY s.survey_seq
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('관리번호: ' || op.aaa);
        DBMS_OUTPUT.PUT_LINE('과목명: ' || op.bbb);
        DBMS_OUTPUT.PUT_LINE('과목 기간: ' || op.ccc);
        DBMS_OUTPUT.PUT_LINE('설문조사 파일명: ' || op.ddd);
        DBMS_OUTPUT.PUT_LINE('완료여부: ' || op.eee);
        DBMS_OUTPUT.PUT_LINE('완료 날짜: ' || op.fff);
        DBMS_OUTPUT.PUT_LINE('　');
    END LOOP;
END procStudentSurvey;

DECLARE
BEGIN
    procStudentSurvey(502);
END;

view-- 설문조사 완료
UPDATE tblsurvey SET surveydate = sysdate WHERE survey_seq = 1496; 

-- 사전 진단평가
CREATE OR REPLACE PROCEDURE procStudentEvaluate(
    studentNum NUMBER
) IS
BEGIN
    FOR op IN (
        SELECT 
            e.evaulate_seq AS aaa,
            cn.coursename AS bbb,
            TO_CHAR(c.coursestartdate, 'yyyy-mm-dd') || ' ~ ' || TO_CHAR(c.courseenddate, 'yyyy-mm-dd') AS ccc,
            ef.evaluatefile AS ddd,
            CASE 
                WHEN e.evaluatedate IS NOT NULL THEN '완료'
                WHEN e.evaluatedate IS NULL THEN '미완료'
            END AS eee,
            e.evaluatedate AS fff
        FROM tblevaluate e
        INNER JOIN tblevaluatefile ef ON e.evaluatefile_seq = ef.evaluatefile_seq
        INNER JOIN tblstudent st ON st.student_seq = e.student_seq
        INNER JOIN tblcoursesubject cs ON cs.coursesubject_seq = e.coursesubject_seq
        INNER JOIN tblsubjectavailability sa ON sa.subjectavailability_seq = cs.subjectavailability_seq
        INNER JOIN tblsubject s2 ON s2.subject_seq = sa.subject_seq
        INNER JOIN tblcourse c ON cs.course_seq = c.course_seq 
        INNER JOIN tblcoursename cn ON cn.coursename_seq = c.coursename_seq
        WHERE st.student_seq = studentNum
        ORDER BY e.evaulate_seq
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('파일번호: ' || op.aaa);
        DBMS_OUTPUT.PUT_LINE('과정명: ' || op.bbb);
        DBMS_OUTPUT.PUT_LINE('과정 기간: ' || op.ccc);
        DBMS_OUTPUT.PUT_LINE('진단평가 파일명: ' || op.ddd);
        DBMS_OUTPUT.PUT_LINE('완료여부: ' || op.eee);
        DBMS_OUTPUT.PUT_LINE('완료 날짜: ' || op.fff);
        DBMS_OUTPUT.PUT_LINE('　');
    END LOOP;
END procStudentEvaluate;

DECLARE
BEGIN
    procStudentEvaluate(502);
END;

view -- 사전 진단평가 완료
UPDATE tblevaluate SET evaluatedate = sysdate WHERE evaulate_seq = 1496; 

-- 학습안내서 조회
CREATE OR REPLACE PROCEDURE procStudentStudyGuide(
    studentNum NUMBER
) IS
BEGIN
    FOR op IN (
        SELECT 
            c.course_seq AS aaa,
            cn.coursename AS bbb,
            TO_CHAR(c.coursestartdate, 'yyyy-mm-dd') || ' ~ ' || TO_CHAR(c.courseenddate, 'yyyy-mm-dd') AS ccc,
            sq.te AS ddd,
            sgf.studyguidefile_seq AS eee,
            sgf.studyguidefile AS fff
        FROM tblstudyguide sg
        INNER JOIN tblstudyguidefile sgf ON sg.studyguidefile_seq = sgf.studyguidefile_seq
        INNER JOIN tblcourse c ON c.course_seq = sg.course_seq
        INNER JOIN tblcoursename cn ON cn.coursename_seq = c.coursename_seq
        INNER JOIN (SELECT course_seq AS seq FROM tblcoursereg GROUP BY course_seq) st ON st.seq = c.course_seq
        INNER JOIN (SELECT cs2.course_seq AS co, t2.teachername AS te
                    FROM tblcoursesubject cs2
                    INNER JOIN tblsubjectavailability sa2 ON cs2.subjectavailability_seq = sa2.subjectavailability_seq
                    INNER JOIN tblteacher t2 ON sa2.teacher_seq = t2.teacher_seq
                    GROUP BY cs2.course_seq, t2.teachername
                    ORDER BY cs2.course_seq) sq ON sq.co = c.course_seq
        WHERE c.course_seq = studentNum
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('과정번호: ' || op.aaa);
        DBMS_OUTPUT.PUT_LINE('과정명: ' || op.bbb);
        DBMS_OUTPUT.PUT_LINE('과정 기간: ' || op.ccc);
        DBMS_OUTPUT.PUT_LINE('강사명: ' || op.ddd);
        DBMS_OUTPUT.PUT_LINE('학습안내서 파일번호: ' || op.eee);
        DBMS_OUTPUT.PUT_LINE('학습안내서 파일명: ' || op.fff);
    END LOOP;
END procStudentStudyGuide;

DECLARE
BEGIN
    procStudentStudyGuide(1);
END;

-- 수강상태 조회
CREATE OR REPLACE PROCEDURE procStudentCourseReg(
    studnetNum NUMBER
) IS
BEGIN
    FOR op IN (
        SELECT 
            cn.coursename AS aaa,
            TO_CHAR(c.coursestartdate, 'yyyy-mm-dd') || ' ~ ' || TO_CHAR(c.courseenddate, 'yyyy-mm-dd') AS bbb,
            cs.completestate AS ccc,
            TO_CHAR(cr.completedate, 'yyyy-mm-dd') AS ddd,
            s.studentname AS eee,
            ROUND(((alls.ats + alls.ws + alls.ps) / 3), 2) AS fff
        FROM tblcoursereg cr
        INNER JOIN tblcourse c ON cr.course_seq = c.course_seq
        INNER JOIN tblcompletestate cs ON cs.completestate_seq = cr.completestate_seq
        INNER JOIN tblcoursename cn ON cn.coursename_seq = c.coursename_seq
        INNER JOIN tblstudent s ON s.student_seq = cr.student_seq
        INNER JOIN (
            SELECT alls.student_seq, AVG(attendscore) AS ats, AVG(wscore) AS ws, AVG(pscore) AS ps
            FROM tblallscore alls
            INNER JOIN tblstudent s ON s.student_seq = alls.student_seq
            GROUP BY alls.student_seq
        ) alls ON alls.student_seq = s.student_seq
        WHERE s.student_seq = studnetNum
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('과목명: ' || op.aaa);
        DBMS_OUTPUT.PUT_LINE('과정 기간: ' || op.bbb);
        DBMS_OUTPUT.PUT_LINE('수료상태: ' || op.ccc);
        DBMS_OUTPUT.PUT_LINE('수료일: ' || op.ddd);
        DBMS_OUTPUT.PUT_LINE('수강자명: ' || op.eee);
        DBMS_OUTPUT.PUT_LINE('평균 점수: ' || op.fff);
        DBMS_OUTPUT.PUT_LINE('　');
    END LOOP;
END procStudentCourseReg;

DECLARE
BEGIN
    procStudentCourseReg(204);
END;